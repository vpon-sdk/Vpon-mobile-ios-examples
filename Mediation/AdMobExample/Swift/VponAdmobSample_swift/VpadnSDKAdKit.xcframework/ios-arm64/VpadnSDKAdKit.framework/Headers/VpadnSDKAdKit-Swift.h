#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef VPADNSDKADKIT_SWIFT_H
#define VPADNSDKADKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VpadnSDKAdKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)







SWIFT_CLASS("_TtC13VpadnSDKAdKit19VpadnAdAudioManager") SWIFT_DEPRECATED_MSG("Use VponAdAudioManager instead.")
@interface VpadnAdAudioManager : NSObject
/// 是否由 Application 來控制 Audio
@property (nonatomic) BOOL isAudioApplicationManaged;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VpadnAdAudioManager * _Nonnull shared;)
+ (VpadnAdAudioManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Application 通知 SDK 即將播放影音或聲音
- (void)noticeApplicationAudioWillStart;
/// Application 通知 SDK 已結束播放影音或聲音
- (void)noticeApplicationAudioDidEnded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum VpadnLogLevel : NSInteger;
@class VpadnAdLocationManager;
@class NSString;

SWIFT_CLASS("_TtC13VpadnSDKAdKit20VpadnAdConfiguration") SWIFT_DEPRECATED_MSG("Use VponAdConfiguration instead.")
@interface VpadnAdConfiguration : NSObject
@property (nonatomic) enum VpadnLogLevel logLevel;
@property (nonatomic, strong) VpadnAdAudioManager * _Nonnull audioManager;
@property (nonatomic, strong) VpadnAdLocationManager * _Nonnull locationManager;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VpadnAdConfiguration * _Nonnull shared;)
+ (VpadnAdConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)initializeSdk;
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class UIImage;

SWIFT_CLASS("_TtC13VpadnSDKAdKit12VpadnAdImage") SWIFT_DEPRECATED_MSG("Use VponAdImage instead.")
@interface VpadnAdImage : NSObject
/// image’s url
@property (nonatomic, copy) NSURL * _Nonnull url;
/// load image method
/// \param block 成功執行的邏輯
///
- (void)loadImageAsyncWithBlock:(void (^ _Nonnull)(UIImage * _Nullable))block;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit22VpadnAdLocationManager") SWIFT_DEPRECATED_MSG("Use VponAdLocationManager instead.")
@interface VpadnAdLocationManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VpadnAdLocationManager * _Nonnull shared;)
+ (VpadnAdLocationManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// SDK 是否能使用 Location
@property (nonatomic) BOOL isEnable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIView;
enum VpadnFriendlyObstructionType : NSInteger;

SWIFT_CLASS("_TtC13VpadnSDKAdKit18VpadnAdObstruction") SWIFT_DEPRECATED_MSG("Use VponAdObstruction instead.")
@interface VpadnAdObstruction : NSObject
@property (nonatomic, weak) UIView * _Nullable view;
@property (nonatomic) enum VpadnFriendlyObstructionType purpose;
@property (nonatomic, copy) NSString * _Nonnull desc;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocation;
enum VpadnUserGender : NSInteger;
enum VpadnMaxAdContentRating : NSInteger;
enum VpadnTagForUnderAgeOfConsent : NSInteger;
enum VpadnTagForChildDirectedTreatment : NSInteger;

SWIFT_CLASS("_TtC13VpadnSDKAdKit14VpadnAdRequest") SWIFT_DEPRECATED_MSG("Use VponAdRequest instead.")
@interface VpadnAdRequest : NSObject
/// 是否能夠自動播放
@property (nonatomic) BOOL autoRefresh;
/// 取得當前版號
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
/// 設定定位位置
- (void)setUserInfoLocation:(CLLocation * _Nonnull)location;
/// 設定使用者年齡
- (void)setUserInfoAge:(NSInteger)age;
/// 設定使用者生日
- (void)setUserInfoBirthdayWithYear:(NSInteger)year month:(NSInteger)month day:(NSInteger)day;
/// 設定使用者性別
- (void)setUserInfoGender:(enum VpadnUserGender)gender;
- (void)setTestDevices:(NSArray<NSString *> * _Nonnull)testDevices SWIFT_DEPRECATED_MSG("Use VponAdRequestConfiguration.shared.testDeviceIdentifiers instead.");
/// 最高可投放的年齡(分類)限制
- (void)setTagForMaxAdContentRating:(enum VpadnMaxAdContentRating)maxAdContentRating;
/// 是否專為特定年齡投放
- (void)setTagForUnderAgeOfConsent:(enum VpadnTagForUnderAgeOfConsent)underAgeOfConsent;
/// 是否專為兒童投放
- (void)setTagForChildDirectedTreatment:(enum VpadnTagForChildDirectedTreatment)childDirectedTreatment;
/// 設置 ContentURL
/// \param contentURL 內容網址
///
- (void)setContentUrl:(NSString * _Nonnull)contentURL;
/// 設置 ContentData
/// \param contentData 內容
///
- (void)setContentData:(NSDictionary<NSString *, id> * _Nonnull)contentData;
/// 新增 ContentData
/// \param key 鍵
///
/// \param value 值
///
- (void)addContentDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// 排除遮蔽偵測的視圖
- (void)addFriendlyObstruction:(UIView * _Nonnull)obstructView purpose:(enum VpadnFriendlyObstructionType)purpose description:(NSString * _Nonnull)description;
/// 設定關鍵字
/// \code
/// 可以使用 Key:Value 的方式 addKeyword(@"Keyword1: Value1"), 同時也可以直接關鍵字直接加入 addKeyword(@"Keyword")
///
/// \endcode\param keyword 關鍵字 / 鍵值
///
- (void)addKeyword:(NSString * _Nonnull)keyword;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC13VpadnSDKAdKit11VpadnAdSize") SWIFT_DEPRECATED_MSG("Use VponAdSize instead.")
@interface VpadnAdSize : NSObject
- (nonnull instancetype)initWithCGSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
/// Use for 320 * 50
+ (VpadnAdSize * _Nonnull)banner SWIFT_WARN_UNUSED_RESULT;
/// Use for 320 * 100
+ (VpadnAdSize * _Nonnull)largeBanner SWIFT_WARN_UNUSED_RESULT;
/// Use for 320 * 480 (for iPad)
+ (VpadnAdSize * _Nonnull)largeRectangle SWIFT_WARN_UNUSED_RESULT;
/// Use for 468 * 60 (for iPad)
+ (VpadnAdSize * _Nonnull)fullBanner SWIFT_WARN_UNUSED_RESULT;
/// Use for 728 * 90 (for iPad)
+ (VpadnAdSize * _Nonnull)leaderBoard SWIFT_WARN_UNUSED_RESULT;
/// Use for 300 * 250 (for iPad)
+ (VpadnAdSize * _Nonnull)mediumRectangle SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;
@protocol VpadnBannerDelegate;

SWIFT_CLASS("_TtC13VpadnSDKAdKit11VpadnBanner") SWIFT_DEPRECATED_MSG("Use VponBannerView instead.")
@interface VpadnBanner : NSObject
@property (nonatomic, copy) NSString * _Nullable strBannerId SWIFT_DEPRECATED_MSG("No replacement.");
/// 根控制項
@property (nonatomic, weak) UIViewController * _Nullable rootViewController;
/// Delegate token
@property (nonatomic, weak) id <VpadnBannerDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nullable platform SWIFT_DEPRECATED_MSG("No replacement.");
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull testIdentifiers SWIFT_DEPRECATED_MSG("Use VponAdRequestConfiguration.shared.testDeviceIdentifiers instead.");
/// 初始化方法
/// \param licenseKey 版位 ID (BannerID, PlacementID)
///
/// \param adSize 廣告 Size
///
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey adSize:(VpadnAdSize * _Nonnull)adSize OBJC_DESIGNATED_INITIALIZER;
- (CGSize)cgSizeFrom:(VpadnAdSize * _Nonnull)adSize SWIFT_WARN_UNUSED_RESULT;
/// 取得廣告
- (void)loadRequest:(VpadnAdRequest * _Nonnull)request;
/// 取得廣告 View
- (UIView * _Nullable)getVpadnAdView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class VponBannerView;

SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit22VponBannerViewDelegate_")
@protocol VponBannerViewDelegate
@optional
/// 通知有廣告可供拉取 call back
- (void)bannerViewDidReceiveAd:(VponBannerView * _Nonnull)bannerView;
/// 通知拉取廣告失敗 call back
- (void)bannerView:(VponBannerView * _Nonnull)bannerView didFailToReceiveAdWithError:(NSError * _Nonnull)error;
/// 通知廣告已送出曝光事件
- (void)bannerViewDidRecordImpression:(VponBannerView * _Nonnull)bannerView;
/// 通知廣告已送出點擊事件
- (void)bannerViewDidRecordClick:(VponBannerView * _Nonnull)bannerView;
@end


@interface VpadnBanner (SWIFT_EXTENSION(VpadnSDKAdKit)) <VponBannerViewDelegate>
- (void)bannerViewDidReceiveAd:(VponBannerView * _Nonnull)bannerView;
- (void)bannerView:(VponBannerView * _Nonnull)bannerView didFailToReceiveAdWithError:(NSError * _Nonnull)error;
- (void)bannerViewDidRecordImpression:(VponBannerView * _Nonnull)bannerView;
- (void)bannerViewDidRecordClick:(VponBannerView * _Nonnull)bannerView;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit19VpadnBannerDelegate_") SWIFT_DEPRECATED_MSG("Use VponBannerViewDelegate instead.")
@protocol VpadnBannerDelegate
@optional
/// 通知有廣告可供拉取 call back
- (void)onVpadnAdLoaded:(VpadnBanner * _Nonnull)banner;
/// 通知拉取廣告失敗 call back
- (void)onVpadnAd:(VpadnBanner * _Nonnull)banner failedToLoad:(NSError * _Nonnull)error;
/// 通知廣告已送出點擊事件
- (void)onVpadnAdClicked:(VpadnBanner * _Nonnull)banner;
- (void)onVpadnAdWillLeaveApplication:(VpadnBanner * _Nonnull)banner SWIFT_DEPRECATED_MSG("No replacement.");
- (void)onVpadnAdWillOpen:(VpadnBanner * _Nonnull)banner SWIFT_DEPRECATED_MSG("No replacement.");
- (void)onVpadnAdClosed:(VpadnBanner * _Nonnull)banner SWIFT_DEPRECATED_MSG("No replacement.");
- (void)onVpadnAdRefreshed:(VpadnBanner * _Nonnull)banner SWIFT_DEPRECATED_MSG("No replacement.");
@end

typedef SWIFT_ENUM(NSInteger, VpadnFriendlyObstructionType, open) {
  VpadnFriendlyObstructionTypeMediaControls = 0,
  VpadnFriendlyObstructionTypeCloseAd = 1,
  VpadnFriendlyObstructionTypeNotVisible = 2,
  VpadnFriendlyObstructionTypeOther = 3,
};

enum VpadnInReadAdType : NSInteger;
@class NSIndexPath;
@protocol VpadnInReadAdDelegate;
@class VpadnVideoAdView;
@class UIScrollView;
@class NSLayoutConstraint;
@class UITableView;
enum VponFriendlyObstructionType : NSInteger;

SWIFT_CLASS("_TtC13VpadnSDKAdKit13VpadnInReadAd")
@interface VpadnInReadAd : NSObject
@property (nonatomic) enum VpadnInReadAdType vpadnInReadAdType;
@property (nonatomic) BOOL isLoaded;
@property (nonatomic, copy) NSIndexPath * _Nullable indexPath;
@property (nonatomic, weak) id <VpadnInReadAdDelegate> _Nullable delegate;
@property (nonatomic, strong) VpadnVideoAdView * _Nullable videoAdView;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId delegate:(id <VpadnInReadAdDelegate> _Nonnull)delegate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId scrollView:(UIScrollView * _Nonnull)scrollView delegate:(id <VpadnInReadAdDelegate> _Nonnull)delegate;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId placeholder:(UIView * _Nonnull)placeholder heightConstraint:(NSLayoutConstraint * _Nonnull)constraint scrollView:(UIScrollView * _Nonnull)scrollView delegate:(id <VpadnInReadAdDelegate> _Nonnull)delegate;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId insertionIndexPath:(NSIndexPath * _Nonnull)indexPath tableView:(UITableView * _Nonnull)tableView delegate:(id <VpadnInReadAdDelegate> _Nonnull)delegate;
- (nonnull instancetype)initWithPlacementId:(NSString * _Nonnull)placementId insertionIndexPath:(NSIndexPath * _Nonnull)indexPath repeatMode:(BOOL)repeatMode tableView:(UITableView * _Nonnull)tableView delegate:(id <VpadnInReadAdDelegate> _Nonnull)delegate;
- (void)loadAdWithTestIdentifiers:(NSArray<NSString *> * _Nonnull)testIdentifiers;
- (UIView * _Nullable)videoView SWIFT_WARN_UNUSED_RESULT;
/// 設置 ContentURL
/// \param contentURL 內容網址
///
- (void)setContentUrl:(NSString * _Nonnull)contentURL;
/// 設置 ContentData
/// \param contentData 內容
///
- (void)setContentData:(NSDictionary<NSString *, id> * _Nonnull)contentData;
/// 新增 ContentData
/// \param key 鍵
///
/// \param value 值
///
- (void)addContentDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// 排除遮蔽偵測的視圖
- (void)addFriendlyObstruction:(UIView * _Nonnull)obstructView purpose:(enum VponFriendlyObstructionType)purpose description:(NSString * _Nonnull)description;
- (BOOL)isVideoAd:(NSIndexPath * _Nonnull)indexPath stride:(NSInteger)stride SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;

@interface VpadnInReadAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
@end

@class UITableViewCell;

@interface VpadnInReadAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canMoveRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSString *> * _Nullable)sectionIndexTitlesForTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView sectionForSectionIndexTitle:(NSString * _Nonnull)title atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView moveRowAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toIndexPath:(NSIndexPath * _Nonnull)destinationIndexPath;
@end


@interface VpadnInReadAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewWillBeginDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillBeginZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view;
- (void)scrollViewDidEndZooming:(UIScrollView * _Nonnull)scrollView withView:(UIView * _Nullable)view atScale:(CGFloat)scale;
- (BOOL)scrollViewShouldScrollToTop:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScrollToTop:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView * _Nonnull)scrollView;
@end


@class UITableViewRowAction;
@class UISwipeActionsConfiguration;
@class UITableViewFocusUpdateContext;
@class UIFocusAnimationCoordinator;
@protocol UISpringLoadedInteractionContext;

@interface VpadnInReadAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayFooterView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingHeaderView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didEndDisplayingFooterView:(UIView * _Nonnull)view forSection:(NSInteger)section;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView estimatedHeightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)tableView:(UITableView * _Nonnull)tableView shouldHighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didHighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didUnhighlightRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSIndexPath * _Nullable)tableView:(UITableView * _Nonnull)tableView willSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSIndexPath * _Nullable)tableView:(UITableView * _Nonnull)tableView willDeselectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didDeselectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (UITableViewCellEditingStyle)tableView:(UITableView * _Nonnull)tableView editingStyleForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)tableView:(UITableView * _Nonnull)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UITableViewRowAction *> * _Nullable)tableView:(UITableView * _Nonnull)tableView editActionsForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UISwipeActionsConfiguration * _Nullable)tableView:(UITableView * _Nonnull)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willBeginEditingRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didEndEditingRowAtIndexPath:(NSIndexPath * _Nullable)indexPath;
- (NSIndexPath * _Nonnull)tableView:(UITableView * _Nonnull)tableView targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toProposedIndexPath:(NSIndexPath * _Nonnull)proposedDestinationIndexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView indentationLevelForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canPerformAction:(SEL _Nonnull)action forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView performAction:(SEL _Nonnull)action forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withSender:(id _Nullable)sender;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canFocusRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView shouldUpdateFocusInContext:(UITableViewFocusUpdateContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didUpdateFocusInContext:(UITableViewFocusUpdateContext * _Nonnull)context withAnimationCoordinator:(UIFocusAnimationCoordinator * _Nonnull)coordinator;
- (NSIndexPath * _Nullable)indexPathForPreferredFocusedViewInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(UITableView * _Nonnull)tableView shouldSpringLoadRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath withContext:(id <UISpringLoadedInteractionContext> _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit21VpadnInReadAdDelegate_")
@protocol VpadnInReadAdDelegate
@optional
- (void)vpadnInReadAd:(VpadnInReadAd * _Nonnull)ad didFailLoading:(NSError * _Nonnull)error;
- (void)vpadnInReadAdWillLoad:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidLoad:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWillStart:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidStart:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWillStop:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidStop:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidPause:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidResume:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidMute:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidUnmute:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdCanExpand:(VpadnInReadAd * _Nonnull)ad withRatio:(CGFloat)ratio;
- (void)vpadnInReadAdWillExpand:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidExpand:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdCanCollapse:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWillCollapse:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidCollapse:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWasClicked:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidClickBrowserClose:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWillTakeOverFullScreen:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidTakeOverFullScreen:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdWillDismissFullscreen:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidDismissFullscreen:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdSkipButtonTapped:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdSkipButtonDidShow:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidReset:(VpadnInReadAd * _Nonnull)ad;
- (void)vpadnInReadAdDidClean:(VpadnInReadAd * _Nonnull)ad;
@end

typedef SWIFT_ENUM(NSInteger, VpadnInReadAdType, open) {
  VpadnInReadAdTypeCustomAd = 0,
  VpadnInReadAdTypeInScroll = 1,
  VpadnInReadAdTypeInTable = 2,
  VpadnInReadAdTypeInTableRepeat = 3,
  VpadnInReadAdTypeInTableCustomAd = 4,
};

@protocol VpadnInterstitialDelegate;

SWIFT_CLASS("_TtC13VpadnSDKAdKit17VpadnInterstitial") SWIFT_DEPRECATED_MSG("Use VponInterstitialAd instead.")
@interface VpadnInterstitial : NSObject
/// Delegate token
@property (nonatomic, weak) id <VpadnInterstitialDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nullable strBannerId SWIFT_DEPRECATED_MSG("No replacement.");
@property (nonatomic, copy) NSString * _Nullable platform SWIFT_DEPRECATED_MSG("No replacement.");
@property (nonatomic) BOOL hasBeenUsed SWIFT_DEPRECATED_MSG("No replacement.");
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull testIdentifiers SWIFT_DEPRECATED_MSG("Use VponAdRequestConfiguration.shared.testDeviceIdentifiers instead.");
/// 初始化方法
/// \param licenseKey 版位 ID (BannerID, PlacementID)
///
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey OBJC_DESIGNATED_INITIALIZER;
/// 取得廣告
- (void)loadRequest:(VpadnAdRequest * _Nonnull)request;
/// 顯示廣告
/// \param rootViewCtrl 根控制項
///
- (void)showFromRootViewController:(UIViewController * _Nonnull)rootViewCtrl;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("No replacement.");
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol VponFullScreenContentAd;

SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit29VponFullScreenContentDelegate_")
@protocol VponFullScreenContentDelegate
@optional
/// 通知廣告已送出曝光事件
- (void)adDidRecordImpression:(id <VponFullScreenContentAd> _Nonnull)ad;
/// 通知廣告已送出點擊事件
- (void)adDidRecordClick:(id <VponFullScreenContentAd> _Nonnull)ad;
/// 通知廣告即將展示在畫面上
- (void)adWillPresentScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
/// 通知廣告即將從畫面上移除
- (void)adWillDismissScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
/// 通知廣告已從畫面上移除
- (void)adDidDismissScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
/// 通知廣告呈現在畫面失敗
- (void)ad:(id <VponFullScreenContentAd> _Nonnull)ad didFailToPresentFullScreenContentWithError:(NSError * _Nonnull)error;
@end


@interface VpadnInterstitial (SWIFT_EXTENSION(VpadnSDKAdKit)) <VponFullScreenContentDelegate>
- (void)adWillPresentScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
- (void)adDidDismissScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
- (void)adDidRecordClick:(id <VponFullScreenContentAd> _Nonnull)ad;
- (void)adWillDismissScreen:(id <VponFullScreenContentAd> _Nonnull)ad;
- (void)ad:(id <VponFullScreenContentAd> _Nonnull)ad didFailToPresentFullScreenContentWithError:(NSError * _Nonnull)error;
- (void)adDidRecordImpression:(id <VponFullScreenContentAd> _Nonnull)ad;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit25VpadnInterstitialDelegate_") SWIFT_DEPRECATED_MSG("Use VponFullScreenContentDelegate instead.")
@protocol VpadnInterstitialDelegate
@optional
/// 通知有廣告可供拉取 call back
- (void)onVpadnInterstitialLoaded:(VpadnInterstitial * _Nonnull)interstitial;
/// 通知拉取廣告失敗 call back
- (void)onVpadnInterstitial:(VpadnInterstitial * _Nonnull)interstitial failedToLoad:(NSError * _Nonnull)error;
- (void)onVpadnInterstitialWillLeaveApplication:(VpadnInterstitial * _Nonnull)interstitial SWIFT_DEPRECATED_MSG("No replacement.");
/// 通知廣告即將被開啟
- (void)onVpadnInterstitialWillOpen:(VpadnInterstitial * _Nonnull)interstitial;
/// 通知廣告已被關閉
- (void)onVpadnInterstitialClosed:(VpadnInterstitial * _Nonnull)interstitial;
/// 通知廣告已送出點擊事件
- (void)onVpadnInterstitialClicked:(VpadnInterstitial * _Nonnull)interstitial;
@end

typedef SWIFT_ENUM(NSInteger, VpadnLogLevel, open) {
  VpadnLogLevelDebug = 0,
  VpadnLogLevelDefaultLevel = 1,
  VpadnLogLevelDontShow = 99,
};

typedef SWIFT_ENUM(NSInteger, VpadnMaxAdContentRating, open) {
  VpadnMaxAdContentRatingUnspecified = -1,
  VpadnMaxAdContentRatingGeneral = 0,
  VpadnMaxAdContentRatingParentalGuidance = 1,
  VpadnMaxAdContentRatingTeen = 2,
  VpadnMaxAdContentRatingMatureAudience = 3,
};

@protocol VpadnMediaViewDelegate;
@class VpadnNativeAd;
@class NSCoder;

SWIFT_CLASS("_TtC13VpadnSDKAdKit14VpadnMediaView") SWIFT_DEPRECATED_MSG("Use VponMediaView instead.")
@interface VpadnMediaView : UIView
@property (nonatomic, weak) id <VpadnMediaViewDelegate> _Nullable delegate;
@property (nonatomic, weak) VpadnNativeAd * _Nullable nativeAd;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit22VpadnMediaViewDelegate_") SWIFT_DEPRECATED_MSG("Use VponVideoController and VponVideoControllerDelegate instead.")
@protocol VpadnMediaViewDelegate
@optional
- (void)mediaViewDidLoad:(VpadnMediaView * _Nonnull)mediaView;
- (void)mediaViewDidFail:(VpadnMediaView * _Nonnull)mediaView error:(NSError * _Nonnull)error;
@end

@protocol VpadnNativeAdDelegate;

SWIFT_CLASS("_TtC13VpadnSDKAdKit13VpadnNativeAd") SWIFT_DEPRECATED_MSG("Use VponNativeAdLoader and VponNativeAd instead.")
@interface VpadnNativeAd : NSObject
/// Delegate token
@property (nonatomic, weak) id <VpadnNativeAdDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nullable strBannerId SWIFT_DEPRECATED_MSG("No replacement.");
@property (nonatomic, copy) NSString * _Nullable platform SWIFT_DEPRECATED_MSG("No replacement.");
/// Branding 圖片
@property (nonatomic, strong) VpadnAdImage * _Nullable icon;
/// Campaign 圖片
@property (nonatomic, strong) VpadnAdImage * _Nullable coverImage;
/// 星數得分
@property (nonatomic) double ratingValue;
/// 星數範圍
@property (nonatomic) NSInteger ratingScale;
/// 主標題
@property (nonatomic, copy) NSString * _Nullable title;
/// 內文
@property (nonatomic, copy) NSString * _Nullable body;
/// 點擊鈕文案
@property (nonatomic, copy) NSString * _Nullable callToAction;
/// 副標題
@property (nonatomic, copy) NSString * _Nullable socialContext;
/// 初始化方法
/// @param licenseKey 版位ID (BannerID, PlacementID)
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey OBJC_DESIGNATED_INITIALIZER;
/// 取得廣告
- (void)loadRequest:(VpadnAdRequest * _Nonnull)request;
- (BOOL)isReady SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("No replacement.");
/// 向 SDK 註冊 View 為廣告Container，且 View 的所有物件均可被點擊觸發事件。
/// \param view 廣告 Container
///
/// \param viewController 根控制項
///
- (void)registerViewForInteraction:(UIView * _Nonnull)view withViewController:(UIViewController * _Nonnull)viewController;
/// 向 SDK 取消註冊的 Container 及所有能被點擊的元件。
- (void)unregisterView;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class VponNativeAdLoader;
@class VponNativeAd;

SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit26VponNativeAdLoaderDelegate_")
@protocol VponNativeAdLoaderDelegate
@optional
/// 通知有廣告可供拉取 call back
- (void)adLoader:(VponNativeAdLoader * _Nonnull)adLoader didReceive:(VponNativeAd * _Nonnull)nativeAd;
/// 通知拉取廣告失敗 call back
- (void)adLoader:(VponNativeAdLoader * _Nonnull)adLoader didFailToReceiveAdWithError:(NSError * _Nonnull)error;
@end


@interface VpadnNativeAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <VponNativeAdLoaderDelegate>
- (void)adLoader:(VponNativeAdLoader * _Nonnull)adLoader didReceive:(VponNativeAd * _Nonnull)nativeAd;
- (void)adLoader:(VponNativeAdLoader * _Nonnull)adLoader didFailToReceiveAdWithError:(NSError * _Nonnull)error;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit20VponNativeAdDelegate_")
@protocol VponNativeAdDelegate
@optional
/// 通知廣告已送出點擊事件
- (void)nativeAdDidRecordClick:(VponNativeAd * _Nonnull)nativeAd;
/// 通知廣告已送出曝光事件
- (void)nativeAdDidRecordImpression:(VponNativeAd * _Nonnull)nativeAd;
@end


@interface VpadnNativeAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <VponNativeAdDelegate>
- (void)nativeAdDidRecordImpression:(VponNativeAd * _Nonnull)nativeAd;
- (void)nativeAdDidRecordClick:(VponNativeAd * _Nonnull)nativeAd;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit21VpadnNativeAdDelegate_") SWIFT_DEPRECATED_MSG("Use VponNativeAdLoaderDelegate and VponNativeAdDelegate instead.")
@protocol VpadnNativeAdDelegate
@optional
/// 通知有廣告可供拉取 call back
- (void)onVpadnNativeAdLoaded:(VpadnNativeAd * _Nonnull)nativeAd;
/// 通知拉取廣告失敗 call back
- (void)onVpadnNativeAd:(VpadnNativeAd * _Nonnull)nativeAd failedToLoad:(NSError * _Nonnull)error;
- (void)onVpadnNativeAdWillLeaveApplication:(VpadnNativeAd * _Nonnull)nativeAd SWIFT_DEPRECATED_MSG("No replacement.");
/// 通知廣告已送出曝光事件
- (void)onVpadnNativeAdDidImpression:(VpadnNativeAd * _Nonnull)nativeAd;
/// 通知廣告已送出點擊事件
- (void)onVpadnNativeAdClicked:(VpadnNativeAd * _Nonnull)nativeAd;
@end

typedef SWIFT_ENUM(NSInteger, VpadnTagForChildDirectedTreatment, open) {
  VpadnTagForChildDirectedTreatmentUnspecified = -1,
  VpadnTagForChildDirectedTreatmentNotForChildDirectedTreatment = 0,
  VpadnTagForChildDirectedTreatmentForChildDirectedTreatment = 1,
};

typedef SWIFT_ENUM(NSInteger, VpadnTagForUnderAgeOfConsent, open) {
  VpadnTagForUnderAgeOfConsentUnspecified = -1,
  VpadnTagForUnderAgeOfConsentNotForUnderAgeOfConsent = 0,
  VpadnTagForUnderAgeOfConsentForUnderAgeOfConsent = 1,
};

typedef SWIFT_ENUM(NSInteger, VpadnUserGender, open) {
  VpadnUserGenderUnspecified = -1,
  VpadnUserGenderMale = 0,
  VpadnUserGenderFemale = 1,
  VpadnUserGenderUnknown = 2,
};


SWIFT_CLASS("_TtC13VpadnSDKAdKit16VpadnVideoAdView")
@interface VpadnVideoAdView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
+ (void)awakeFromNib;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end





SWIFT_CLASS("_TtC13VpadnSDKAdKit18VponAdAudioManager")
@interface VponAdAudioManager : NSObject
/// 是否由 Application 來控制 Audio
@property (nonatomic) BOOL isAudioApplicationManaged;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VponAdAudioManager * _Nonnull shared;)
+ (VponAdAudioManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Application 通知 SDK 即將播放影音或聲音
- (void)noticeApplicationAudioWillStart;
/// Application 通知 SDK 已結束播放影音或聲音
- (void)noticeApplicationAudioDidEnded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum VponLogLevel : NSInteger;
@class VponAdLocationManager;

/// SDK 基本通用設定
SWIFT_CLASS("_TtC13VpadnSDKAdKit19VponAdConfiguration")
@interface VponAdConfiguration : NSObject
@property (nonatomic) enum VponLogLevel logLevel;
@property (nonatomic, strong) VponAdAudioManager * _Nonnull audioManager;
@property (nonatomic, strong) VponAdLocationManager * _Nonnull locationManager;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VponAdConfiguration * _Nonnull shared;)
+ (VponAdConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// 初始化 SDK
- (void)initializeSdk;
/// 取得當前版號
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit21VponAdLocationManager")
@interface VponAdLocationManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VponAdLocationManager * _Nonnull shared;)
+ (VponAdLocationManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// SDK 是否能使用 Location
@property (nonatomic) BOOL isEnable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CLLocationManager;

@interface VponAdLocationManager (SWIFT_EXTENSION(VpadnSDKAdKit)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit17VponAdObstruction")
@interface VponAdObstruction : NSObject
@property (nonatomic, weak) UIView * _Nullable view;
@property (nonatomic) enum VponFriendlyObstructionType purpose;
@property (nonatomic, copy) NSString * _Nonnull desc;
+ (enum VponFriendlyObstructionType)getVponPurpose:(NSInteger)int_ SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum VponUserGender : NSInteger;

SWIFT_CLASS("_TtC13VpadnSDKAdKit13VponAdRequest")
@interface VponAdRequest : NSObject
/// 設定使用者年齡
- (void)setUserInfoAge:(NSInteger)age;
/// 設定使用者生日
- (void)setUserInfoBirthdayWithYear:(NSInteger)year month:(NSInteger)month day:(NSInteger)day;
/// 設定使用者性別
- (void)setUserInfoGender:(enum VponUserGender)gender;
/// 設置 ContentURL
/// \param contentURL 內容網址
///
- (void)setContentUrl:(NSString * _Nonnull)contentURL;
/// 設置 ContentData
/// \param contentData 內容
///
- (void)setContentData:(NSDictionary<NSString *, id> * _Nonnull)contentData;
/// 新增 ContentData
/// \param key 鍵
///
/// \param value 值
///
- (void)addContentDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// 排除遮蔽偵測的視圖
- (void)addFriendlyObstruction:(UIView * _Nonnull)obstructView purpose:(enum VponFriendlyObstructionType)purpose description:(NSString * _Nonnull)description;
/// 設定關鍵字
/// \code
/// 可以使用 Key:Value 的方式 addKeyword("Keyword1: Value1"), 同時也可以直接關鍵字直接加入 addKeyword("Keyword")
///
/// \endcode\param keyword 關鍵字 / 鍵值
///
- (void)addKeyword:(NSString * _Nonnull)keyword;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum VponMaxAdContentRating : NSInteger;
enum VponTagForUnderAgeOfConsent : NSInteger;
enum VponTagForChildDirectedTreatment : NSInteger;

SWIFT_CLASS("_TtC13VpadnSDKAdKit26VponAdRequestConfiguration")
@interface VponAdRequestConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VponAdRequestConfiguration * _Nonnull shared;)
+ (VponAdRequestConfiguration * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// 最高可投放的年齡(分類)限制
@property (nonatomic) enum VponMaxAdContentRating maxAdContentRating;
/// 是否專為特定年齡投放
@property (nonatomic) enum VponTagForUnderAgeOfConsent tagForUnderAgeOfConsent;
/// 是否專為兒童投放
@property (nonatomic) enum VponTagForChildDirectedTreatment tagForChildDirectedTreatment;
/// 測試用的裝置 IDFA，以取得 Vpon 測試廣告
@property (nonatomic, copy) NSArray<NSString *> * _Nullable testDeviceIdentifiers;
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit10VponAdSize")
@interface VponAdSize : NSObject
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
/// Use for 320 * 50
+ (VponAdSize * _Nonnull)banner SWIFT_WARN_UNUSED_RESULT;
/// Use for 320 * 100
+ (VponAdSize * _Nonnull)largeBanner SWIFT_WARN_UNUSED_RESULT;
/// Use for 320 * 480 (for iPad)
+ (VponAdSize * _Nonnull)largeRectangle SWIFT_WARN_UNUSED_RESULT;
/// Use for 468 * 60 (for iPad)
+ (VponAdSize * _Nonnull)fullBanner SWIFT_WARN_UNUSED_RESULT;
/// Use for 728 * 90 (for iPad)
+ (VponAdSize * _Nonnull)leaderBoard SWIFT_WARN_UNUSED_RESULT;
/// Use for 300 * 250 (for iPad)
+ (VponAdSize * _Nonnull)mediumRectangle SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit14VponBannerView")
@interface VponBannerView : UIView
@property (nonatomic, copy) NSString * _Nullable licenseKey;
@property (nonatomic, weak) UIViewController * _Nullable rootViewController;
@property (nonatomic, weak) id <VponBannerViewDelegate> _Nullable delegate;
@property (nonatomic) BOOL autoRefresh;
- (nonnull instancetype)initWithAdSize:(VponAdSize * _Nonnull)adSize origin:(CGPoint)origin OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdSize:(VponAdSize * _Nonnull)adSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)load:(VponAdRequest * _Nonnull)request;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, VponConsentStatus, open) {
  VponConsentStatusUnknown = -1,
  VponConsentStatusNonPersonalized = 0,
  VponConsentStatusPersonalized = 1,
};

typedef SWIFT_ENUM(NSInteger, VponFriendlyObstructionType, open) {
  VponFriendlyObstructionTypeMediaControls = 0,
  VponFriendlyObstructionTypeCloseAd = 1,
  VponFriendlyObstructionTypeNotVisible = 2,
  VponFriendlyObstructionTypeOther = 3,
};


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit23VponFullScreenContentAd_")
@protocol VponFullScreenContentAd
@end



SWIFT_CLASS("_TtC13VpadnSDKAdKit18VponInterstitialAd")
@interface VponInterstitialAd : NSObject <VponFullScreenContentAd>
@property (nonatomic, weak) id <VponFullScreenContentDelegate> _Nullable delegate;
+ (void)loadWithLicenseKey:(NSString * _Nonnull)licenseKey request:(VponAdRequest * _Nonnull)request completion:(void (^ _Nonnull)(VponInterstitialAd * _Nullable, NSError * _Nullable))completion;
- (void)presentFrom:(UIViewController * _Nonnull)rootViewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VponLogLevel, open) {
  VponLogLevelDebug = 0,
  VponLogLevelDefault = 1,
  VponLogLevelDontShow = 2,
};

typedef SWIFT_ENUM(NSInteger, VponMaxAdContentRating, open) {
  VponMaxAdContentRatingUnspecified = -1,
  VponMaxAdContentRatingGeneral = 0,
  VponMaxAdContentRatingParentalGuidance = 1,
  VponMaxAdContentRatingTeen = 2,
  VponMaxAdContentRatingMatureAudience = 3,
};

@class VponVideoController;

SWIFT_CLASS("_TtC13VpadnSDKAdKit16VponMediaContent")
@interface VponMediaContent : NSObject
/// Indicates whether the media content has video content.
@property (nonatomic) BOOL hasVideoContent;
/// Controls the media content’s video.
@property (nonatomic, strong) VponVideoController * _Nullable videoController;
/// The main image to be displayed when the media content doesn’t contain video. Only available to native ads.
@property (nonatomic, strong) UIImage * _Nullable mainImage;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit13VponMediaView")
@interface VponMediaView : UIView
@property (nonatomic, strong) VponMediaContent * _Nullable mediaContent;
/// Public for mediation
- (void)unregisterAllEvents;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class VponNativeAdImage;

SWIFT_CLASS("_TtC13VpadnSDKAdKit12VponNativeAd")
@interface VponNativeAd : NSObject
@property (nonatomic, weak) id <VponNativeAdDelegate> _Nullable delegate;
/// 主標題
@property (nonatomic, copy) NSString * _Nullable headline;
/// 點擊鈕文案
@property (nonatomic, copy) NSString * _Nullable callToAction;
/// Branding 圖片
@property (nonatomic, strong) VponNativeAdImage * _Nullable icon;
/// 內文
@property (nonatomic, copy) NSString * _Nullable body;
/// Campaign 圖片
@property (nonatomic, strong) VponNativeAdImage * _Nullable coverImage;
/// 星數得分
@property (nonatomic) double ratingValue;
/// 星數範圍
@property (nonatomic) NSInteger ratingScale;
/// 副標題
@property (nonatomic, copy) NSString * _Nullable socialContext;
/// media 內容
@property (nonatomic, strong) VponMediaContent * _Nullable mediaContent;
/// Public for mediation use
- (void)loadMediaView:(VponMediaView * _Nullable)mediaView;
/// Public for mediation
- (void)registerAdView:(UIView * _Nonnull)view;
/// Public for mediation
- (void)clickHandler:(id _Nonnull)sender;
/// Public for mediation
- (void)reportAdChoices;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@class UITouch;

@interface VponNativeAd (SWIFT_EXTENSION(VpadnSDKAdKit)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC13VpadnSDKAdKit17VponNativeAdImage")
@interface VponNativeAdImage : NSObject
@property (nonatomic, strong) UIImage * _Nullable image;
/// Public for mediation
@property (nonatomic, copy) NSURL * _Nonnull imageURL;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13VpadnSDKAdKit18VponNativeAdLoader")
@interface VponNativeAdLoader : NSObject
@property (nonatomic, weak) id <VponNativeAdLoaderDelegate> _Nullable delegate;
- (nonnull instancetype)initWithLicenseKey:(NSString * _Nonnull)licenseKey rootViewController:(UIViewController * _Nullable)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (void)load:(VponAdRequest * _Nonnull)request;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC13VpadnSDKAdKit16VponNativeAdView")
@interface VponNativeAdView : UIView
@property (nonatomic, weak) IBOutlet UIView * _Nullable iconView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable coverImageView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable ratingValueView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable ratingScaleView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable headlineView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable bodyView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable callToActionView;
@property (nonatomic, weak) IBOutlet UIView * _Nullable socialContextView;
@property (nonatomic, weak) IBOutlet VponMediaView * _Nullable mediaView;
@property (nonatomic, strong) VponNativeAd * _Nullable nativeAd;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VponTagForChildDirectedTreatment, open) {
  VponTagForChildDirectedTreatmentUnspecified = -1,
  VponTagForChildDirectedTreatmentNotForChildDirectedTreatment = 0,
  VponTagForChildDirectedTreatmentForChildDirectedTreatment = 1,
};

typedef SWIFT_ENUM(NSInteger, VponTagForUnderAgeOfConsent, open) {
  VponTagForUnderAgeOfConsentUnspecified = -1,
  VponTagForUnderAgeOfConsentNotForUnderAgeOfConsent = 0,
  VponTagForUnderAgeOfConsentForUnderAgeOfConsent = 1,
};


SWIFT_CLASS("_TtC13VpadnSDKAdKit7VponUCB")
@interface VponUCB : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VponUCB * _Nonnull shared;)
+ (VponUCB * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setConsentStatus:(enum VponConsentStatus)status;
@end

typedef SWIFT_ENUM(NSInteger, VponUserGender, open) {
  VponUserGenderUnspecified = -1,
  VponUserGenderMale = 0,
  VponUserGenderFemale = 1,
  VponUserGenderUnknown = 2,
};

@protocol VponVideoControllerDelegate;

SWIFT_CLASS("_TtC13VpadnSDKAdKit19VponVideoController")
@interface VponVideoController : NSObject
@property (nonatomic, weak) id <VponVideoControllerDelegate> _Nullable delegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13VpadnSDKAdKit27VponVideoControllerDelegate_")
@protocol VponVideoControllerDelegate
@optional
/// 通知 video ad 影片開始播放
- (void)videoControllerDidPlayVideo:(VponVideoController * _Nonnull)videoController;
/// 通知 video ad 影片暫停播放
- (void)videoControllerDidPauseVideo:(VponVideoController * _Nonnull)videoController;
/// 通知 video ad 影片播放完畢
- (void)videoControllerDidEndVideoPlayback:(VponVideoController * _Nonnull)videoController;
/// 通知 video ad 影片被靜音
- (void)videoControllerDidMuteVideo:(VponVideoController * _Nonnull)videoController;
/// 通知 video ad 影片被取消靜音
- (void)videoControllerDidUnmuteVideo:(VponVideoController * _Nonnull)videoController;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
